import sys
import re
import csv
import matplotlib.pyplot as plt
from os import listdir
from os.path import isfile, isdir, join


"""
=== UTILS ===
"""

TAIL_LEN_DELAY = len('_results_delays.csv')
TAIL_LEN_RATE = len('_results_loss-rate.csv')
SCALE = 22


def getCSVFiles(path):
    regexp = re.compile(r'.*csv$')
    files = [f for f in listdir(path) if isfile(join(path, f))]
    return [f for f in files if re.search(regexp, f) is not None]


def drawDelays(path, name):
    file = open(path, "r")
    x = list()
    y = list()
    try:
        reader = csv.reader(file)
        for row in reader:
            # print(row)
            for elt in row[1:]:
                x.append(int(row[0]))
                y.append(int(elt))
        plt.scatter(x, y, s=10)
        plt.title('Delays for messages emitted by ' + name)
        plt.xlabel('Messages rank')
        plt.ylabel('Delays measured by reader')
        plt.savefig('ScatterPlot.png')
        plt.show()
    finally:
        file.close()


def drawBoxDelays(path, name):
    file = open(path, "r")
    data = []
    try:
        reader = csv.reader(file)
        for row in reader:
            print(reader.line_num)
            if (reader.line_num % SCALE == 0):
                l = []
                for elt in row[1:]:
                    l.append(int(elt))
                data.append(l)
        plt.boxplot(data)
        plt.title('Delays for messages emitted by ' + name)
        plt.xlabel('Messages rank factor %s' % SCALE)
        plt.ylabel('Delays measured by reader')
        plt.savefig('ScatterPlot.png')
        plt.show()
    finally:
        file.close()


def drawLossRate(path, name):
    print("toto")
    file = open(path, "r")
    x = list()
    y = list()
    try:
        reader = csv.reader(file)
        for row in reader:
            print(row)
            x.append(int(row[0]))
            y.append(float(row[1]))

        plt.scatter(x, y, s=10, alpha=0.05)
        plt.title('Loss rate for messages emitted by ' + name)
        plt.xlabel('Messages rank')
        plt.ylabel('Loss rate')
        plt.savefig('ScatterPlot.png')
        plt.show()
    finally:
        file.close()

if __name__ == '__main__':
    if len(sys.argv) < 2:
        print('usage : display_measurements.py path_to_sources_dir ')
        sys.exit(1)

    path_to_sources_dir = sys.argv[1]
    if not isdir(path_to_sources_dir):
        print('The path to sources dir given is not correct')
        sys.exit(1)

    files = getCSVFiles(path_to_sources_dir)
    if len(files) < 2:
        print('Not enough result files into the directory given')
        sys.exit(1)

    is_delay = re.compile(r'.*delays.csv$')
    is_loss_rate = re.compile(r'.*loss-rate.csv$')

    file_recorded = []
    for f in files:

        if re.search(is_delay, f) is not None:
            drawDelays(join(path_to_sources_dir, f), f[:-TAIL_LEN_DELAY])
            drawBoxDelays(join(path_to_sources_dir, f), f[:-TAIL_LEN_DELAY])

        elif re.search(is_loss_rate, f) is not None:
            drawLossRate(join(path_to_sources_dir, f), f[:-TAIL_LEN_RATE])
